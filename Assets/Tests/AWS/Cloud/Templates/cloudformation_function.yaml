AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Prefix:
    Type: String
    Default: dev
  Gateway: 
    Type: String
    Default: gateway
  BuildBucket:
    Type: String
    Default: bucket
  FunctionName:
    Type: String
    Default: name
  FunctionS3Key:
    Type: String
    Default: build
  FunctionHandler:
    Type: String
    Default: main
  FunctionIAMArn:
    Type: String
    Default: iam
Resources:
# -----------------------
# Function
# -----------------------
  LFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Join ['',[!Ref Prefix,!Ref FunctionName]]
      Handler: !Ref FunctionHandler
      Runtime: go1.x
      Timeout: 30
      MemorySize: 128
      Role: !Ref FunctionIAMArn
      Code:
        S3Bucket: !Ref BuildBucket
        S3Key: !Ref FunctionS3Key
  LFunctionPermission:
    Type: "AWS::Lambda::Permission"
    DependsOn:
      - LFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Join ['',[!Ref Prefix,!Ref FunctionName]]
      Principal: apigateway.amazonaws.com
      SourceArn: !Join ['',['arn:aws:execute-api:',!Ref AWS::Region,':',!Ref AWS::AccountId,':',!Ref Gateway,'/*/*/',!Ref Prefix,!Ref FunctionName]]
  LApi:
    Type: 'AWS::ApiGatewayV2::Integration'
    DependsOn:
      - LFunction
    Properties:
      ApiId: !Ref Gateway
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      IntegrationUri: !Join 
        - ''
        - - 'arn:aws:apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt LFunction.Arn
          - /invocations
      ConnectionType: INTERNET
      PayloadFormatVersion: '1.0'
  LRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn:
      - LApi
    Properties:
      ApiId: !Ref Gateway
      RouteKey: !Join ['',['ANY /',!Ref Prefix,!Ref FunctionName]]
      AuthorizationType: NONE
      Target: !Join ['',['integrations/',!Ref LApi]]