// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: asyncrpc.proto

#include "asyncrpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace GameWorkstore {
namespace AsyncNetworkEngine {
class GenericRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericRequest>
      _instance;
} _GenericRequest_default_instance_;
class GenericResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericResponse>
      _instance;
} _GenericResponse_default_instance_;
class GenericErrorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericErrorResponse>
      _instance;
} _GenericErrorResponse_default_instance_;
}  // namespace AsyncNetworkEngine
}  // namespace GameWorkstore
namespace protobuf_asyncrpc_2eproto {
void InitDefaultsGenericRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GameWorkstore::AsyncNetworkEngine::_GenericRequest_default_instance_;
    new (ptr) ::GameWorkstore::AsyncNetworkEngine::GenericRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameWorkstore::AsyncNetworkEngine::GenericRequest::InitAsDefaultInstance();
}

void InitDefaultsGenericRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenericRequestImpl);
}

void InitDefaultsGenericResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GameWorkstore::AsyncNetworkEngine::_GenericResponse_default_instance_;
    new (ptr) ::GameWorkstore::AsyncNetworkEngine::GenericResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameWorkstore::AsyncNetworkEngine::GenericResponse::InitAsDefaultInstance();
}

void InitDefaultsGenericResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenericResponseImpl);
}

void InitDefaultsGenericErrorResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GameWorkstore::AsyncNetworkEngine::_GenericErrorResponse_default_instance_;
    new (ptr) ::GameWorkstore::AsyncNetworkEngine::GenericErrorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameWorkstore::AsyncNetworkEngine::GenericErrorResponse::InitAsDefaultInstance();
}

void InitDefaultsGenericErrorResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenericErrorResponseImpl);
}

}  // namespace protobuf_asyncrpc_2eproto
namespace GameWorkstore {
namespace AsyncNetworkEngine {
bool Transmission_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 200:
    case 204:
    case 400:
    case 401:
    case 403:
    case 405:
    case 408:
    case 421:
    case 500:
    case 501:
    case 511:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GenericRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericRequest::kMessegeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericRequest::GenericRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_asyncrpc_2eproto::InitDefaultsGenericRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameWorkstore.AsyncNetworkEngine.GenericRequest)
}
GenericRequest::GenericRequest(const GenericRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messege_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.messege().size() > 0) {
    messege_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messege_);
  }
  // @@protoc_insertion_point(copy_constructor:GameWorkstore.AsyncNetworkEngine.GenericRequest)
}

void GenericRequest::SharedCtor() {
  messege_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GenericRequest::~GenericRequest() {
  // @@protoc_insertion_point(destructor:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  SharedDtor();
}

void GenericRequest::SharedDtor() {
  messege_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenericRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GenericRequest& GenericRequest::default_instance() {
  ::protobuf_asyncrpc_2eproto::InitDefaultsGenericRequest();
  return *internal_default_instance();
}

GenericRequest* GenericRequest::New(::google::protobuf::Arena* arena) const {
  GenericRequest* n = new GenericRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messege_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenericRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Messege = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messege()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messege().data(), static_cast<int>(this->messege().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GameWorkstore.AsyncNetworkEngine.GenericRequest.Messege"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  return false;
#undef DO_
}

void GenericRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Messege = 1;
  if (this->messege().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messege().data(), static_cast<int>(this->messege().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameWorkstore.AsyncNetworkEngine.GenericRequest.Messege");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->messege(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:GameWorkstore.AsyncNetworkEngine.GenericRequest)
}

size_t GenericRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string Messege = 1;
  if (this->messege().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messege());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GenericRequest*>(&from));
}

void GenericRequest::MergeFrom(const GenericRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.messege().size() > 0) {

    messege_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messege_);
  }
}

void GenericRequest::CopyFrom(const GenericRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameWorkstore.AsyncNetworkEngine.GenericRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericRequest::IsInitialized() const {
  return true;
}

void GenericRequest::Swap(GenericRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericRequest::InternalSwap(GenericRequest* other) {
  using std::swap;
  messege_.Swap(&other->messege_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string GenericRequest::GetTypeName() const {
  return "GameWorkstore.AsyncNetworkEngine.GenericRequest";
}


// ===================================================================

void GenericResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericResponse::kMessegeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericResponse::GenericResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_asyncrpc_2eproto::InitDefaultsGenericResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameWorkstore.AsyncNetworkEngine.GenericResponse)
}
GenericResponse::GenericResponse(const GenericResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messege_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.messege().size() > 0) {
    messege_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messege_);
  }
  // @@protoc_insertion_point(copy_constructor:GameWorkstore.AsyncNetworkEngine.GenericResponse)
}

void GenericResponse::SharedCtor() {
  messege_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GenericResponse::~GenericResponse() {
  // @@protoc_insertion_point(destructor:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  SharedDtor();
}

void GenericResponse::SharedDtor() {
  messege_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenericResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GenericResponse& GenericResponse::default_instance() {
  ::protobuf_asyncrpc_2eproto::InitDefaultsGenericResponse();
  return *internal_default_instance();
}

GenericResponse* GenericResponse::New(::google::protobuf::Arena* arena) const {
  GenericResponse* n = new GenericResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messege_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenericResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Messege = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messege()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messege().data(), static_cast<int>(this->messege().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GameWorkstore.AsyncNetworkEngine.GenericResponse.Messege"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  return false;
#undef DO_
}

void GenericResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Messege = 2;
  if (this->messege().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messege().data(), static_cast<int>(this->messege().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameWorkstore.AsyncNetworkEngine.GenericResponse.Messege");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->messege(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:GameWorkstore.AsyncNetworkEngine.GenericResponse)
}

size_t GenericResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string Messege = 2;
  if (this->messege().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messege());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GenericResponse*>(&from));
}

void GenericResponse::MergeFrom(const GenericResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.messege().size() > 0) {

    messege_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messege_);
  }
}

void GenericResponse::CopyFrom(const GenericResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameWorkstore.AsyncNetworkEngine.GenericResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericResponse::IsInitialized() const {
  return true;
}

void GenericResponse::Swap(GenericResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericResponse::InternalSwap(GenericResponse* other) {
  using std::swap;
  messege_.Swap(&other->messege_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string GenericResponse::GetTypeName() const {
  return "GameWorkstore.AsyncNetworkEngine.GenericResponse";
}


// ===================================================================

void GenericErrorResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericErrorResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericErrorResponse::GenericErrorResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_asyncrpc_2eproto::InitDefaultsGenericErrorResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
}
GenericErrorResponse::GenericErrorResponse(const GenericErrorResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
}

void GenericErrorResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GenericErrorResponse::~GenericErrorResponse() {
  // @@protoc_insertion_point(destructor:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  SharedDtor();
}

void GenericErrorResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenericErrorResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GenericErrorResponse& GenericErrorResponse::default_instance() {
  ::protobuf_asyncrpc_2eproto::InitDefaultsGenericErrorResponse();
  return *internal_default_instance();
}

GenericErrorResponse* GenericErrorResponse::New(::google::protobuf::Arena* arena) const {
  GenericErrorResponse* n = new GenericErrorResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenericErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GameWorkstore.AsyncNetworkEngine.GenericErrorResponse.Error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  return false;
#undef DO_
}

void GenericErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Error = 1;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameWorkstore.AsyncNetworkEngine.GenericErrorResponse.Error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
}

size_t GenericErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string Error = 1;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericErrorResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GenericErrorResponse*>(&from));
}

void GenericErrorResponse::MergeFrom(const GenericErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void GenericErrorResponse::CopyFrom(const GenericErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameWorkstore.AsyncNetworkEngine.GenericErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericErrorResponse::IsInitialized() const {
  return true;
}

void GenericErrorResponse::Swap(GenericErrorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericErrorResponse::InternalSwap(GenericErrorResponse* other) {
  using std::swap;
  error_.Swap(&other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string GenericErrorResponse::GetTypeName() const {
  return "GameWorkstore.AsyncNetworkEngine.GenericErrorResponse";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AsyncNetworkEngine
}  // namespace GameWorkstore

// @@protoc_insertion_point(global_scope)
